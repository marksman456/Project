// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;
using ProjectData.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(XiangYunDbContext))]
    [Migration("20250904025124_AddUserIdToEmployee")]
    partial class AddUserIdToEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID", "RoleID")
                        .HasName("PK__Employee__C27FE312BCE697B6");

                    b.HasIndex("RoleID");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AspNetUserRoles", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Project.Models.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Username")
                        .HasName("PK__Account__536C85E5260F1375");

                    b.HasIndex("MemberID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryID")
                        .HasName("PK__Category__19093A2B31EC38D6");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__Category__8517B2E07683E5D6")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Project.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Resignation")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeID")
                        .HasName("PK__Employee__7AD04FF1A6BDA2BB");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "EmployeeNumber" }, "UQ__Employee__8D663598BAB6580E")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Project.Models.InventoryMovement", b =>
                {
                    b.Property<int>("MovementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovementID"));

                    b.Property<DateTime>("MovementDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedOrderID")
                        .HasColumnType("int");

                    b.HasKey("MovementID")
                        .HasName("PK__Inventor__D1822466A7B0C9ED");

                    b.HasIndex("ProductDetailID");

                    b.HasIndex("RelatedOrderID");

                    b.ToTable("InventoryMovement");
                });

            modelBuilder.Entity("Project.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .IsFixedLength();

                    b.Property<string>("MemberNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("MemberID")
                        .HasName("PK__Member__0CF04B38CDDE2A25");

                    b.HasIndex(new[] { "Email" }, "UQ__Member__A9D10534AF3EA7A2")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "MemberNumber" }, "UQ__Member__F9D9F88E15990D39")
                        .IsUnique();

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Project.Models.ModelSpec", b =>
                {
                    b.Property<int>("ModelSpecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelSpecID"));

                    b.Property<int>("ProductModelID")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ModelSpecID")
                        .HasName("PK__ModelSpe__BECF39024DD7D1A6");

                    b.HasIndex("ProductModelID");

                    b.ToTable("ModelSpec");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<DateOnly?>("ArrivalDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("PaymethodID")
                        .HasColumnType("int");

                    b.Property<int>("SalesChannelID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID")
                        .HasName("PK__Order__C3905BAF9F5E47D5");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("MemberID");

                    b.HasIndex("PaymethodID");

                    b.HasIndex("SalesChannelID");

                    b.HasIndex(new[] { "OrderNumber" }, "UQ__Order__CAC5E743ADDDFF4B")
                        .IsUnique();

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Project.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(1.00m);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "ProductDetailID")
                        .HasName("PK__OrderDet__905886C61C6A9F4D");

                    b.HasIndex("ProductDetailID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Project.Models.Paymethod", b =>
                {
                    b.Property<int>("PaymethodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymethodID"));

                    b.Property<string>("PaymethodName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymethodID")
                        .HasName("PK__Paymetho__4C4FA14936E3BBD9");

                    b.ToTable("Paymethod");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsSerialized")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("ProductImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProductModelID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductSKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductID")
                        .HasName("PK__Product__B40CC6ED7A4312A0");

                    b.HasIndex("ProductModelID");

                    b.HasIndex(new[] { "ProductSKU" }, "UQ__Product__A34E50D0C67CAD1D")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Project.Models.ProductDetail", b =>
                {
                    b.Property<int>("ProductDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductDetailID"));

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductDetailID")
                        .HasName("PK__ProductD__3C8DD6948A2DA7B1");

                    b.HasIndex("ProductID");

                    b.HasIndex(new[] { "SerialNumber" }, "UQ__ProductD__048A0008FA6EEC8F")
                        .IsUnique()
                        .HasFilter("[SerialNumber] IS NOT NULL");

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("Project.Models.ProductModel", b =>
                {
                    b.Property<int>("ProductModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductModelID"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ProductModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductModelID")
                        .HasName("PK__ProductM__DB7B7E9BA3181C3E");

                    b.HasIndex("CategoryID");

                    b.ToTable("ProductModel");
                });

            modelBuilder.Entity("Project.Models.PurchaseDetails", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderID", "ProductDetailID")
                        .HasName("PK__Purchase__50A3712DDCEDD521");

                    b.HasIndex("ProductDetailID");

                    b.ToTable("PurchaseDetails");
                });

            modelBuilder.Entity("Project.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderID"));

                    b.Property<DateOnly?>("ArrivalDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrderID")
                        .HasName("PK__Purchase__036BAC4492ED71F7");

                    b.HasIndex("SupplierID");

                    b.HasIndex(new[] { "PurchaseOrderNumber" }, "UQ__Purchase__96241948644A61D1")
                        .IsUnique();

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("Project.Models.Quotation", b =>
                {
                    b.Property<int>("QuotationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuotationID"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<bool>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("QuotationNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateOnly>("QuoteDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly?>("ValidityPeriod")
                        .HasColumnType("date");

                    b.HasKey("QuotationID")
                        .HasName("PK__Quotatio__E19752B3230D0696");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("MemberID");

                    b.HasIndex(new[] { "QuotationNumber" }, "UQ__Quotatio__F3A63C4A41B27FA1")
                        .IsUnique();

                    b.ToTable("Quotation");
                });

            modelBuilder.Entity("Project.Models.QuotationDetail", b =>
                {
                    b.Property<int>("QuotationID")
                        .HasColumnType("int");

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("QuotationID", "ProductDetailID")
                        .HasName("PK__Quotatio__B25F8FDA89C56EC6");

                    b.HasIndex("ProductDetailID");

                    b.ToTable("QuotationDetail");
                });

            modelBuilder.Entity("Project.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID")
                        .HasName("PK__Role__8AFACE3ACEE4216E");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Role__8A2B6160D9FD0471")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Project.Models.SalesChannel", b =>
                {
                    b.Property<int>("SalesChannelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesChannelID"));

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesChannelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalesChannelID")
                        .HasName("PK__SalesCha__5C479447F2AE0A8B");

                    b.ToTable("SalesChannel");
                });

            modelBuilder.Entity("Project.Models.ShippingDetail", b =>
                {
                    b.Property<int>("ShippingOrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ShippingOrderID", "ProductDetailID")
                        .HasName("PK__Shipping__35FE0BFC20DB90E8");

                    b.HasIndex("ProductDetailID");

                    b.ToTable("ShippingDetail");
                });

            modelBuilder.Entity("Project.Models.ShippingOrder", b =>
                {
                    b.Property<int>("ShippingOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingOrderID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShippingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShippingNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ShippingOrderID")
                        .HasName("PK__Shipping__6636D695D30D5797");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("OrderID");

                    b.HasIndex(new[] { "ShippingNumber" }, "UQ__Shipping__2C1412C2DF7F5033")
                        .IsUnique();

                    b.ToTable("ShippingOrder");
                });

            modelBuilder.Entity("Project.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("SupplierAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SupplierTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("SupplierID")
                        .HasName("PK__Supplier__4BE66694BB97AD81");

                    b.HasIndex(new[] { "SupplierName" }, "UQ__Supplier__9C5DF66FD806EFED")
                        .IsUnique();

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.HasOne("Project.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeR__Emplo__46E78A0C");

                    b.HasOne("Project.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeR__RoleI__47DBAE45");
                });

            modelBuilder.Entity("Project.Models.Account", b =>
                {
                    b.HasOne("Project.Models.Member", "Member")
                        .WithMany("Account")
                        .HasForeignKey("MemberID")
                        .IsRequired()
                        .HasConstraintName("FK__Account__MemberI__3C69FB99");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Project.Models.Employee", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Models.InventoryMovement", b =>
                {
                    b.HasOne("Project.Models.ProductDetail", "ProductDetail")
                        .WithMany("InventoryMovement")
                        .HasForeignKey("ProductDetailID")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Produ__60A75C0F");

                    b.HasOne("Project.Models.Order", "RelatedOrder")
                        .WithMany()
                        .HasForeignKey("RelatedOrderID");

                    b.Navigation("ProductDetail");

                    b.Navigation("RelatedOrder");
                });

            modelBuilder.Entity("Project.Models.ModelSpec", b =>
                {
                    b.HasOne("Project.Models.ProductModel", "ProductModel")
                        .WithMany("ModelSpec")
                        .HasForeignKey("ProductModelID")
                        .IsRequired()
                        .HasConstraintName("FK__ModelSpec__Produ__52593CB8");

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.HasOne("Project.Models.Employee", "Employee")
                        .WithMany("Order")
                        .HasForeignKey("EmployeeID")
                        .IsRequired()
                        .HasConstraintName("FK__Order__EmployeeI__06CD04F7");

                    b.HasOne("Project.Models.Member", "Member")
                        .WithMany("Order")
                        .HasForeignKey("MemberID")
                        .IsRequired()
                        .HasConstraintName("FK__Order__MemberID__05D8E0BE");

                    b.HasOne("Project.Models.Paymethod", "Paymethod")
                        .WithMany("Order")
                        .HasForeignKey("PaymethodID")
                        .IsRequired()
                        .HasConstraintName("FK__Order__Paymethod__07C12930");

                    b.HasOne("Project.Models.SalesChannel", "SalesChannel")
                        .WithMany("Order")
                        .HasForeignKey("SalesChannelID")
                        .IsRequired()
                        .HasConstraintName("FK__Order__SalesChan__08B54D69");

                    b.Navigation("Employee");

                    b.Navigation("Member");

                    b.Navigation("Paymethod");

                    b.Navigation("SalesChannel");
                });

            modelBuilder.Entity("Project.Models.OrderDetail", b =>
                {
                    b.HasOne("Project.Models.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__0F624AF8");

                    b.HasOne("Project.Models.ProductDetail", "ProductDetail")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProductDetailID")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Produ__10566F31");

                    b.Navigation("Order");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.ProductModel", "ProductModel")
                        .WithMany("Product")
                        .HasForeignKey("ProductModelID")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Product__571DF1D5");

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("Project.Models.ProductDetail", b =>
                {
                    b.HasOne("Project.Models.Product", "Product")
                        .WithMany("ProductDetail")
                        .HasForeignKey("ProductID")
                        .IsRequired()
                        .HasConstraintName("FK__ProductDe__Produ__5BE2A6F2");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project.Models.ProductModel", b =>
                {
                    b.HasOne("Project.Models.Category", "Category")
                        .WithMany("ProductModel")
                        .HasForeignKey("CategoryID")
                        .IsRequired()
                        .HasConstraintName("FK__ProductMo__Categ__4F7CD00D");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Models.PurchaseDetails", b =>
                {
                    b.HasOne("Project.Models.ProductDetail", "ProductDetail")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("ProductDetailID")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseD__Produ__6EF57B66");

                    b.HasOne("Project.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseOrderID")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseD__Purch__6E01572D");

                    b.Navigation("ProductDetail");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Project.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Project.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrder")
                        .HasForeignKey("SupplierID")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Suppl__693CA210");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Project.Models.Quotation", b =>
                {
                    b.HasOne("Project.Models.Employee", "Employee")
                        .WithMany("Quotation")
                        .HasForeignKey("EmployeeID")
                        .IsRequired()
                        .HasConstraintName("FK__Quotation__Emplo__76969D2E");

                    b.HasOne("Project.Models.Member", "Member")
                        .WithMany("Quotation")
                        .HasForeignKey("MemberID")
                        .IsRequired()
                        .HasConstraintName("FK__Quotation__Membe__75A278F5");

                    b.Navigation("Employee");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Project.Models.QuotationDetail", b =>
                {
                    b.HasOne("Project.Models.ProductDetail", "ProductDetail")
                        .WithMany("QuotationDetail")
                        .HasForeignKey("ProductDetailID")
                        .IsRequired()
                        .HasConstraintName("FK__Quotation__Produ__7C4F7684");

                    b.HasOne("Project.Models.Quotation", "Quotation")
                        .WithMany("QuotationDetail")
                        .HasForeignKey("QuotationID")
                        .IsRequired()
                        .HasConstraintName("FK__Quotation__Quota__7B5B524B");

                    b.Navigation("ProductDetail");

                    b.Navigation("Quotation");
                });

            modelBuilder.Entity("Project.Models.ShippingDetail", b =>
                {
                    b.HasOne("Project.Models.ProductDetail", "ProductDetail")
                        .WithMany("ShippingDetail")
                        .HasForeignKey("ProductDetailID")
                        .IsRequired()
                        .HasConstraintName("FK__ShippingD__Produ__1BC821DD");

                    b.HasOne("Project.Models.ShippingOrder", "ShippingOrder")
                        .WithMany("ShippingDetail")
                        .HasForeignKey("ShippingOrderID")
                        .IsRequired()
                        .HasConstraintName("FK__ShippingD__Shipp__1AD3FDA4");

                    b.Navigation("ProductDetail");

                    b.Navigation("ShippingOrder");
                });

            modelBuilder.Entity("Project.Models.ShippingOrder", b =>
                {
                    b.HasOne("Project.Models.Employee", "Employee")
                        .WithMany("ShippingOrder")
                        .HasForeignKey("EmployeeID")
                        .IsRequired()
                        .HasConstraintName("FK__ShippingO__Emplo__160F4887");

                    b.HasOne("Project.Models.Order", "Order")
                        .WithMany("ShippingOrder")
                        .HasForeignKey("OrderID")
                        .IsRequired()
                        .HasConstraintName("FK__ShippingO__Order__151B244E");

                    b.Navigation("Employee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Project.Models.Category", b =>
                {
                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("Project.Models.Employee", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("Quotation");

                    b.Navigation("ShippingOrder");
                });

            modelBuilder.Entity("Project.Models.Member", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Order");

                    b.Navigation("Quotation");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Navigation("OrderDetail");

                    b.Navigation("ShippingOrder");
                });

            modelBuilder.Entity("Project.Models.Paymethod", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("Project.Models.ProductDetail", b =>
                {
                    b.Navigation("InventoryMovement");

                    b.Navigation("OrderDetail");

                    b.Navigation("PurchaseDetails");

                    b.Navigation("QuotationDetail");

                    b.Navigation("ShippingDetail");
                });

            modelBuilder.Entity("Project.Models.ProductModel", b =>
                {
                    b.Navigation("ModelSpec");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project.Models.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("Project.Models.Quotation", b =>
                {
                    b.Navigation("QuotationDetail");
                });

            modelBuilder.Entity("Project.Models.SalesChannel", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Project.Models.ShippingOrder", b =>
                {
                    b.Navigation("ShippingDetail");
                });

            modelBuilder.Entity("Project.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
