@using Project.ViewModels.VMProductDetail
@model ProductDetailIndexViewModel
@{
    ViewData["Title"] = "庫存列表";
}


    <h1 class="text-center">@ViewData["Title"]</h1>

<p class="text-end">
    <a asp-action="Create" class="btn btn-primary">
    <i class="bi bi-plus-circle-fill"></i> 進貨登錄
    </a>
</p>
<div class="card card-body mb-3">
    <form asp-action="Index" method="get" class="row g-3 align-items-center">
        <div class="col-md-6">
            <input type="text" name="keyword" value="@ViewData["CurrentKeyword"]" class="form-control" placeholder="搜尋產品名稱、SKU、序號或批號..." />
        </div>
        <div class="col-md-4">
            @{
                // 備註：為了方便在下拉選單中保留選項，我們先準備好一個選項列表
                var statusList = new List<SelectListItem>
                        {
                        new SelectListItem { Value = "All", Text = "全部狀態" },
                        new SelectListItem { Value = "庫存中", Text = "庫存中" },
                        new SelectListItem { Value = "已售出", Text = "已售出" }
                        // 未來可以增加更多狀態，例如 "維修中", "已報廢" 等
                        };
                var currentStatus = ViewData["CurrentStatus"] as string ?? "All";
                var statusSelectList = new SelectList(statusList, "Value", "Text", currentStatus);
            }
            <select name="status" asp-items="@statusSelectList" class="form-select"></select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-success w-100">查詢</button>
        </div>
    </form>
</div>
<hr />






<h3 class="mt-4">序號化商品庫存 (@Model.SerializedItems.Count(i => i.Status == "庫存中") 筆可用)</h3>
@if (Model.SerializedItems.Any())
{
    @await Html.PartialAsync("PartialView/_SerializedStockTable", Model.SerializedItems)
}
else
{
    <p class="text-muted">目前沒有任何序號化商品庫存。</p>
}


<h3 class="mt-5">批量商品庫存</h3>
@if (Model.NonSerializedItems.Any())
{
    @await Html.PartialAsync("PartialView/_NonSerializedStockTable", Model.NonSerializedItems)
}
else
{
    <p class="text-muted">目前沒有任何批量商品庫存。</p>
}