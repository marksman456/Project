@model Project.Models.ViewModels.QuotationEditViewModel

@{
    ViewData["Title"] = "編輯報價單";
}

<div class="container mt-4">
    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @* 隱藏欄位，用來傳遞 QuotationID *@
        <input type="hidden" asp-for="QuotationID" />
        <input type="hidden" asp-for="QuotationNumber" />
        <input type="hidden" asp-for="CreatedDate" />

        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <h2 class="mb-0">@ViewData["Title"] - @Model.QuotationNumber</h2>
            </div>

            @* --- 主檔資訊 --- *@
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label asp-for="MemberID" class="form-label fw-bold">客戶名稱</label>
                        <select asp-for="MemberID" class="form-select" asp-items="ViewBag.MemberName"></select>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="EmployeeID" class="form-label fw-bold">負責員工</label>
                        <select asp-for="EmployeeID" class="form-select" asp-items="ViewBag.EmployeeName"></select>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="QuoteDate" class="form-label fw-bold">報價日期</label>
                        <input asp-for="QuoteDate" class="form-control" type="date" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="ValidityPeriod" class="form-label fw-bold">有效期限</label>
                        <input asp-for="ValidityPeriod" class="form-control" type="date" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="Status" class="form-label fw-bold">狀態</label>
                        <select asp-for="Status" class="form-select">
                            <option value="報價中">報價中</option>
                            <option value="已成交">已成交</option>
                            <option value="已失效">已失效</option>
                        </select>
                    </div>
                    <div class="col-12">
                        <label asp-for="Note" class="form-label fw-bold">備註</label>
                        <textarea asp-for="Note" class="form-control" rows="2"></textarea>
                    </div>
                </div>
            </div>

            <hr class="my-0" />

            @* --- 明細輸入區 --- *@
            <div class="card-body">
                <h5 class="card-title">報價品項</h5>
                <div class="row g-2 align-items-center mb-3 p-2 bg-body-tertiary rounded">
                    <div class="col-md-8">
                        <label for="productSearch" class="form-label">搜尋商品 (名稱/SKU/規格)</label>
                        <input type="text" id="productSearch" class="form-control" placeholder="輸入關鍵字搜尋...">
                    </div>
                    <div class="col-md-4 d-grid">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" id="addProductBtn" class="btn btn-success">加入品項</button>
                    </div>
                </div>

                <table class="table table-striped table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 40%;">商品名稱 (規格)</th>
                            <th style="width: 15%;" class="text-end">單價</th>
                            <th style="width: 15%;" class="text-center">數量</th>
                            <th style="width: 15%;" class="text-end">小計</th>
                            <th style="width: 15%;" class="text-center">操作</th>
                        </tr>
                    </thead>
                    <tbody id="quotationDetailsTableBody">
                        @* 【修改重點】: 使用 for 迴圈載入已有的明細資料 *@
                        @for (int i = 0; i < Model.QuotationDetail.Count; i++)
                        {
                            var item = Model.QuotationDetail.ElementAt(i);
                            <tr>
                                <td>
                                    @* 隱藏欄位，用來傳遞 QuotationDetailID 和 ProductDetailID *@
                                    <input type="hidden" name="QuotationDetail[@i].QuotationDetailID" value="@item.QuotationID" />
                                    <input type="hidden" name="QuotationDetail[@i].ProductDetailID" value="@item.ProductDetailID"/>

                                    @item.ProductNameAndSpec

                                </td>
                                <td>
                                    <input type="number" name="QuotationDetail[@i].Price" class="form-control text-end price-input" value="@item.Price" step="0.01" min="0" />
                                </td>
                                <td>
                                    <input type="number" name="QuotationDetail[@i].Quantity" class="form-control text-center quantity-input" value="@item.Quantity" min="1" />
                                </td>
                                <td class="subtotal text-end pe-3 align-middle">
                                    @((item.Price * item.Quantity).ToString("N2"))
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-sm btn-danger remove-item-btn">移除</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr class="fw-bold fs-5">
                            <td colspan="3" class="text-end">總計金額：</td>
                            <td id="grandTotal" class="text-end pe-3 text-danger"></td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <div class="card-footer text-center">
                <input type="submit" class="btn btn-primary" value="儲存變更"/>
                <a asp-action="Index" class="btn btn-secondary">返回列表</a>
            </div>
        </div>
    </form>
</div>

@* 引用和 Create.cshtml 完全一樣的 jQuery 腳本 *@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.3/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.3/jquery-ui.min.js"></script>

    <script>
        $(document).ready(function () {

            let selectedProduct = null;
            const detailsTableBody = $('#quotationDetailsTableBody');

            calculateTotals();

            $("#productSearch").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("SearchProducts", "Products", new { Area = "Admin" })",
                        dataType: "json",
                        data: { keyword: request.term },
                        success: function (data) { response(data); }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $("#productSearch").val(ui.item.label);
                    selectedProduct = ui.item;
                    event.preventDefault();
                }
            });

            $("#productSearch").on("keyup", function(){
                if($(this).val() === ""){ selectedProduct = null; }
            });

            $('#addProductBtn').on('click', function() {
                
                if (selectedProduct == null) {
                    alert('請先搜尋並從下拉選單中選擇一個商品規格！');
                    return;
                }
              
                     const isExisting = detailsTableBody.find('input[name*="ProductDetailID"]').filter(function() {
                        
                    return String($(this).val()) === String(selectedProduct.productDetailID);
                     }).length > 0;

                 

                      if (isExisting) {
                          alert('此商品規格已存在於報價單中，請直接修改數量。');
                          return;
                      }
                const index = detailsTableBody.find('tr').length;

                // 【修改 #1】: 新增品項時，也使用 toLocaleString 格式化初始小計
                const initialSubtotal = selectedProduct.price.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

                const newRow = `
                    <tr>
                        <td>
                            <input type="hidden" name="QuotationDetail[${index}].QuotationDetailID" value="0" />
                            <input type="hidden" name="QuotationDetail[${index}].ProductDetailID" value="${selectedProduct.productDetailID}" />
                            ${selectedProduct.label}
                        </td>
                        <td>
                            <input type="number" name="QuotationDetail[${index}].Price" class="form-control text-end price-input" value="${Number(selectedProduct.price).toFixed(2)}" step="0.01" min="0" />
                        </td>
                        <td>
                            <input type="number" name="QuotationDetail[${index}].Quantity" class="form-control text-center quantity-input" value="1" min="1" />
                        </td>
                        <td class="subtotal text-end pe-3 align-middle">
                            ${initialSubtotal}
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-danger remove-item-btn">移除</button>
                        </td>
                    </tr>`;
                detailsTableBody.append(newRow);
                selectedProduct = null;
                $('#productSearch').val('').focus();
                calculateTotals();
            });

            detailsTableBody.on('click', '.remove-item-btn', function() {
                $(this).closest('tr').remove();
                calculateTotals();
                reindexTableRows();
            });

            detailsTableBody.on('input', '.price-input, .quantity-input', function() {
                const row = $(this).closest('tr');
                const price = parseFloat(row.find('.price-input').val()) || 0;
                const quantity = parseInt(row.find('.quantity-input').val()) || 0;
                const subtotal = price * quantity;

                // 【修改 #2】: 修改數量/價格時，使用 toLocaleString 格式化小計
                const formattedSubtotal = subtotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                row.find('.subtotal').text(formattedSubtotal);

                calculateTotals();
            });

            function calculateTotals() {
                let grandTotal = 0;
                detailsTableBody.find('tr').each(function() {
                    const subtotalText = $(this).find('.subtotal').text().replace(/,/g, ''); // 移除千分位符號再計算
                    grandTotal += parseFloat(subtotalText) || 0;
                });
                // 總計也使用 toLocaleString 保持格式一致
                $('#grandTotal').text(grandTotal.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
            }

            function reindexTableRows() {
                detailsTableBody.find('tr').each(function(newIndex) {
                    $(this).find('input, select').each(function() {
                        const oldName = $(this).attr('name');
                        if (oldName) {
                            const newName = oldName.replace(/\\[\\d+\\]/, `[${newIndex}]`);
                            $(this).attr('name', newName);
                        }
                    });
                });
            }
        });
    </script>
}
